<section
  class="py-10 bg-[url('/assets/images/home-bg-2.jpg')] bg-no-repeat bg-cover relative"
>
  <div class="absolute inset-0 backdrop-blur-sm"></div>
  <div
    class="relative flex align-middle justify-center p-2 bg-black rounded-lg max-w-2xl mx-auto"
  >
    <div id="container" class="md:w-[700px] w-full md:h-[400px] h-[200px]">
    </div>
  </div>
</section>

<script is:inline src="//cdnjs.cloudflare.com/ajax/libs/three.js/105/three.js"></script>
<script is:inline src="//cdn.jsdelivr.net/npm/panolens@0.11.0/build/panolens.min.js"></script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    var viewer, container;
    container = document.querySelector("#container");

    // Array to hold panorama objects
    var panoramas = [
      new PANOLENS.ImagePanorama("/assets/images360/workshop-rizvi.jpg"),
      new PANOLENS.ImagePanorama("/assets/images360/seminar-floor.jpg"),
      new PANOLENS.ImagePanorama("/assets/images360/seminar-floor.jpg") // example additional panorama
    ];

    // Create a function to generate infospots and link panoramas
    function createInfospots() {
      panoramas.forEach((panorama, index) => {
        const nextPanorama = panoramas[(index + 1) % panoramas.length]; // link to the next panorama or loop back

        // Create a new infospot for each panorama
        var infospot = new PANOLENS.Infospot(300, PANOLENS.DataImage.Info); // Infospot with an icon
        infospot.position.set(1000, 100, -2000); // Set position for the infospot
        infospot.addHoverText(`Navigate to Seminar Hall Floor`);
        
        // On click, navigate to the next panorama
        infospot.addEventListener("click", function () {
          viewer.setPanorama(nextPanorama); // Navigate to the next panorama
        });

        // Add infospot to the current panorama
        panorama.add(infospot);
      });
    }

    // Viewer setup
    viewer = new PANOLENS.Viewer({
      container: container,
    });

    // Add all panoramas to the viewer
    panoramas.forEach((panorama) => {
      viewer.add(panorama);
    });

    // Create infospots for navigation
    createInfospots();

    // Start with the first panorama
    viewer.setPanorama(panoramas[0]);
  });
</script>
